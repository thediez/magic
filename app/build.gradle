apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'

apply plugin: 'io.fabric'
apply plugin: "androidx.navigation.safeargs"

sourceCompatibility = 1.8

def getVersionCode = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-list', '--count', 'HEAD'
            standardOutput = stdout
        }
        return Integer.parseInt(stdout.toString().trim())
    }
    catch (ignored) {
        return 1
    }
}


android {
    useLibrary 'org.apache.http.legacy'
    signingConfigs {
    }
    compileSdkVersion 29
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "com.timejet.bio.timejet"
        minSdkVersion 21
        versionCode getVersionCode()
        versionName "21." + getVersionCode()
        multiDexEnabled true //important
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        targetSdkVersion 29

        sourceSets {
            main.java.srcDirs += 'src/main/kotlin'
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        packagingOptions {
            pickFirst 'META-INF/LICENSE.txt' // picks the JavaMail license file
        }
    }
    productFlavors {
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
        dataBinding = true
    }
    android.applicationVariants.all { variant ->
        if (variant.buildType.name == 'release') {
            variant.mergeAssets.doLast {
                delete(fileTree(dir: variant.mergeAssets.outputDir, includes: ['**/pixelperfect/*']))
            }
        }
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName = outputFile.name.replace(".apk", "-time-jet-${getVersionCode()}.apk")
                outputFileName = fileName
            }
        }
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
    implementation "androidx.annotation:annotation:$versions.support"
    implementation "androidx.appcompat:appcompat:$versions.support"
    implementation "androidx.recyclerview:recyclerview:$versions.recyclerview"
    implementation "androidx.cardview:cardview:$versions.cardview"
    implementation 'com.google.android.material:material:1.3.0'
    implementation "com.intuit.sdp:sdp-android:1.0.6"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
    implementation 'androidx.lifecycle:lifecycle-viewmodel-savedstate:2.3.0'
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation 'com.airbnb.android:lottie:3.6.1'
    implementation 'androidx.preference:preference-ktx:1.1.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.4.0-alpha04'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0-alpha04'

//    Navigation
    implementation "androidx.navigation:navigation-fragment:$versions.navigation"
    implementation "androidx.navigation:navigation-ui:$versions.navigation"

//    ConstraintLayout
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintlayout"
    implementation "androidx.constraintlayout:constraintlayout-solver:$versions.constraintlayout"

    implementation 'io.realm:android-adapters:3.1.0'
    implementation files('libs/poishadow-all-mpxj.jar')
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.12'
    implementation 'com.sun.mail:android-mail:1.6.5'
    implementation 'com.sun.mail:android-activation:1.6.5'
    implementation 'com.dropbox.core:dropbox-core-sdk:3.1.5'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.4.30"
    // Do not update library below "com.loopj" leave it on version 1.4.8
    // there is an issue with SSL handshake
    implementation 'com.loopj.android:android-async-http:1.4.8'
    implementation 'com.google.firebase:firebase-core:18.0.2'
    implementation 'com.google.firebase:firebase-auth:20.0.2'
    implementation 'com.google.firebase:firebase-messaging:21.0.1'
    implementation 'com.google.firebase:firebase-firestore:22.1.0'
    implementation 'com.firebase:firebase-client-android:2.5.2'
    implementation 'com.github.douglasjunior:android-simple-tooltip:0.2.3'
    implementation 'com.mikhaellopez:circularprogressbar:3.0.3'
    //Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9"

    //noinspection OutdatedLibrary
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.0@aar') {
        transitive = true;
    }
    //noinspection OutdatedLibrary
    implementation('com.crashlytics.sdk.android:crashlytics-ndk:2.0.2@aar') {
        transitive = true;
    }


    implementation 'org.apache.commons:commons-compress:1.20'
}

kapt {
    generateStubs = true
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android-extensions'